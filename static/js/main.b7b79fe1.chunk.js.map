{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onInputChange","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7b79fe1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id ?\r\n                        (contact = action.payload) : contact)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from \"../../context\";\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onShowClick = () => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        })\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        } catch (e) {\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        < div\r\n                            className=\"card card-body mb-3\">\r\n                            < h4> {name}\r\n                                <i onClick={this.onShowClick}\r\n                                   className=\"fas fa-sort-down\"\r\n                                   style={{cursor: 'pointer'}}/>\r\n                                < i\r\n                                    className=\"fas fa-times\"\r\n                                    style={\r\n                                        {\r\n                                            cursor: 'pointer', float:\r\n                                                'right', color:\r\n                                                'red'\r\n                                        }\r\n                                    }\r\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                       style={{\r\n                                           cursor: 'pointer',\r\n                                           float: 'right',\r\n                                           color: 'black',\r\n                                           marginRight: '1rem'\r\n                                       }}/>\r\n                                </Link>\r\n\r\n                            </h4>\r\n                            {\r\n                                showContactInfo ? (\r\n                                    <ul className=\"list-group\">\r\n                                        <li className=\"list-group-item\">Email: {email}</li>\r\n                                        <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                    </ul>\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from \"./Contact\";\r\nimport {Consumer} from \"../../context\";\r\n\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\"> Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact =>\r\n                                <Contact key={contact.id} contact={contact}/>\r\n                            )}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from \"classnames\";\r\n\r\n\r\nconst TextInputGroup = ({\r\n                            label,\r\n                            name,\r\n                            value,\r\n                            placeholder,\r\n                            type,\r\n                            onChange,\r\n                            error\r\n                        }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type}\r\n                   name={name}\r\n                   className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n                   placeholder={placeholder}\r\n                   value={value}\r\n                   onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.string.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onInputChange = e => this.setState({[e.target.name]: e.target.value});\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        // Check for Errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Email is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Email is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-header\">\r\n                                    Add Contact\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name..\"\r\n                                                        value={name} onChange={this.onInputChange}\r\n                                                        error={errors.name}\r\n                                        />\r\n                                        <TextInputGroup label=\"Email\" name=\"email\" placeholder=\"Enter Email..\"\r\n                                                        value={email} onChange={this.onInputChange} type=\"email\"\r\n                                                        error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone..\"\r\n                                                        value={phone} onChange={this.onInputChange}\r\n                                                        error={errors.phone}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const {name, email, phone} = res.data;\r\n\r\n\r\n        this.setState({\r\n            name,\r\n            email,\r\n            phone\r\n        })\r\n    }\r\n\r\n    onInputChange = e => this.setState({[e.target.name]: e.target.value});\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        // Check for Errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Email is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Email is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n        };\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-header\">\r\n                                    Edit Contact\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name..\"\r\n                                                        value={name} onChange={this.onInputChange}\r\n                                                        error={errors.name}\r\n                                        />\r\n                                        <TextInputGroup label=\"Email\" name=\"email\" placeholder=\"Enter Email..\"\r\n                                                        value={email} onChange={this.onInputChange} type=\"email\"\r\n                                                        error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone..\"\r\n                                                        value={phone} onChange={this.onInputChange}\r\n                                                        error={errors.phone}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"/> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"> <i className=\"fas fa-plus\"/> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"> <i className=\"fas fa-question\"/> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst About = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404 </span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }));\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //\r\n    // }\r\n    //\r\n    // componentDidUpdate() {\r\n    //\r\n    // }\r\n    //\r\n    // componentWillUpdate() {\r\n    //\r\n    // }\r\n    //\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //\r\n    // }\r\n    //\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     return null\r\n    // }\r\n    //\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //\r\n    // }\r\n\r\n    render() {\r\n        const {title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport {Provider} from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\"/>\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts}/>\n                                <Route exact path=\"/contact/add\" component={AddContact}/>\n                                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                                <Route exact path=\"/about\" component={About}/>\n                                <Route exact path=\"/test\" component={Test}/>\n                                <Route component={NotFound}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}